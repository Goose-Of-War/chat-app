{% extends './_base.njk' %}


{% block customcss %}
	<style>
		.message-container{
			margin: 5px;
			border: solid 2px black;
			border-radius: 4px;
		}
	</style>
{% endblock %}

{% block customjs %}
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<script>	
		function showMessage (messageObject, error = false) {
			// make a message element
			let messageElement = document.createElement('div');
			messageElement.className = 'message-container';
			if (!error) {
				// user
				let userElement = document.createElement('div');
				userElement.className = 'message-user';
				userElement.innerHTML = messageObject.user;
				messageElement.appendChild(userElement);
				// time
				let timeElement = document.createElement('div');
				timeElement.className = 'message-time';
				timeElement.innerHTML = messageObject.time;
				messageElement.appendChild(timeElement);
				// message
				let bodyElement = document.createElement('div');
				bodyElement.className = 'message-body';
				bodyElement.innerHTML = messageObject.message;
				messageElement.appendChild(bodyElement);
			} else {
				let errorElement = document.createElement('div');
				errorElement.className = 'message-error';
				errorElement.innerHTML = JSON.stringify(messageObject.error);
				messageElement.appendChild(errorElement);
			}
			// append the whole thing into message container
			document.getElementsByClassName('messages-container')[0].appendChild(messageElement);
		}
		function sendMessage () {
			const msg = {
				message: document.getElementById('message-field').value,
				chat,
				time: Date()
			};
			axios.post('/send-message', msg).then(res => {
				msg.user = res.data.user;
				socket.emit('sendMessage', msg);
				document.getElementById('message-field').value = '';
			}).catch(err => {
				showMessage({ error: 'Message wasn\'t sent' }, true);
			});
		}

		window.onload = function () {
			chat = window.location.href.split('/').pop();
			axios.post('/fetch-messages', { chat }).then(res => {
				const messages = res.data;
				console.log(messages);
				messages.forEach(msg => showMessage(msg));
			});
		}
	</script>
	<script>
		const socket = io();
		socket.on('userMessage', data => showMessage(data));
		socket.on('errorMessage', error => showMessage({ error }, true));	
	</script>
{% endblock %}

{% block pagecontent %}
	<h3>Chat</h3>
	<hr>
	<div class="chat-container">
		<div class="messages-container">
		<!-- Will contain the messages present in the chatboard -->
		</div>
		<div class="send-container">
			<input type="text" name="message" id="message-field">
			<button type="submit" onclick="sendMessage()"> -> </button>
		</div>
	</div>
{% endblock %}